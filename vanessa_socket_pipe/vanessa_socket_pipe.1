.\""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
.\" vanessa_socket_pipe.1                                  February 2001
.\" Horms                                             horms@verge.net.au
.\"
.\" vanessa_socket_pipe
.\" Trivial TCP/IP pipe based on libvanessa_socket
.\" Copyright (C) 1999-2008  Horms <horms@verge.net.au>
.\" 
.\" This program is free software; you can redistribute it and/or
.\" modify it under the terms of the GNU General Public License as
.\" published by the Free Software Foundation; either version 2 of the
.\" License, or (at your option) any later version.
.\" 
.\" This program is distributed in the hope that it will be useful, but
.\" WITHOUT ANY WARRANTY; without even the implied warranty of
.\" MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
.\" General Public License for more details.
.\" 
.\" You should have received a copy of the GNU General Public License
.\" along with this program; if not, write to the Free Software
.\" Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
.\" 02111-1307  USA
.\"
.\""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
.TH VANESSA_SOCKET_PIPE 1 "12th February 2001"
.SH NAME
vanessa_socket_pipe \- Trivial TCP/IP pipe based on libvanessa_socket
.SH SYNOPSIS
\fBvanessa_socket_pipe\fP [options]
.SH DESCRIPTION
A TCP/IP pipe is a user space programme that listens for TCP/IP connections
on port on the local host and when a client connects makes a connection to
a TCP port, possibly on another host. Once both connections are established
data sent on one connection is relayed to the other, hence forming a
bi-directional pipe.
.PP
Uses include enabling connections to specific ports on hosts behind a
packet filter.
.PP
This code is intended primarily as an example of how many of the features
of libvanessa_socket work.
.SH OPTIONS
.TP
.B -c|--connection_limit:
Maximum number of connections to accept simultaneously. A value of zero
sets no limit on the number of simultaneous connections.  (default 0)
.TP
.B -d|--debug:
Turn on verbose debuging to stderr.
.TP
.B -h|--help:
Display this message.
.TP
.B -L|--listen_port:
Port to listen on. (mandatory)
.TP
.B -l|--listen_host:
Address to listen on. May be a hostname or an IP address.
If not defined then listen on all local addresses.
.TP
.B -n|--no_lookup:
Turn off lookup of hostnames and portnames. That is, hosts must be given 
as IP addresses and ports must be given as numbers.
.TP
.B -O|--outgoing_port: 
Define a port to connect to. If not specified -l|--listen_port will be
used.
.TP
.B -o|--outgoing_host: 
Define host to connect to.  May be a hostname or an IP address. (mandatory)
.TP
.B -q|--quiet:
Only log errors. Overriden by -d|--debug.
.TP
.B -t|--timeout: 
Idle timeout in seconds.  Value of zero sets infinite timeout.  (default 1800)
.TP
.B Notes: 
Default value for binary flags is off.
.br
-L|--listen_port and -o|--outgoing_host must be defined.
.SH AUTHOR
Horms <horms@verge.net.au>
